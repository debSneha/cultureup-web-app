# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node

name: Staging CI/CD

on: [push, pull_request, workflow_dispatch] 
  
  # to cancel previous runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_test_dev:

    strategy:
      matrix:
        node-version: ${{ fromJSON(github.ref == 'refs/heads/main' && '[18]' || '[16,18]') }}

    runs-on: 'ubuntu-latest'

    steps:
    - name: checkout repository
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: install dependencies 
      run: npm install

    - name: Build
      run: npm run build --if-present
    
    # - name: Unit Tests
    #   run: npm run test:unit

  deploy_test_staging:

    runs-on: 'ubuntu-latest'
    needs: build_test_dev

    if: github.ref == 'refs/heads/main'
    steps:

    - name: checkout repository
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: install dependencies 
      run: npm install
    
    - name: Install Doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DO_ACCESS_TOKEN }}
    
    - name: Deploy
      run: doctl apps create-deployment ${{ secrets.APP_ID }} --wait=true

    - name: Add IP address to trusted source postgres
      uses: GarreauArthur/manage-digital-ocean-managed-database-trusted-sources-gh-action@main
      with:
        action: "add"
        database_id: ${{ secrets.DATABASE_ID }}
        digitalocean_token: ${{ secrets.DO_ACCESS_TOKEN }}
    
    - name: Migrate Database
      run: |
        touch .env
        echo DATABASE_URL=$DATABASE_URL >> .env
        npx prisma generate
        npx prisma db push
      env: 
        DATABASE_URL: ${{secrets.DATABASE_URL}}
    
    - name: API Tests
      run: |
        touch .env
        echo DATABASE_URL=$DATABASE_URL >> .env
        echo CLIENT_URL=$CLIENT_URL >> .env
        echo KEY=$KEY >> .env
        echo EMAIL=$EMAIL >> .env
        echo PASSWORD=$PASSWORD >> .env
        echo SERVICE_ACCOUNT=$SERVICE_ACCOUNT >> .env
        echo SERVICE_ACCOUNT_DEV=$SERVICE_ACCOUNT_DEV >> .env
        npm run test:int:ci
      env: 
        DATABASE_URL: ${{secrets.DATABASE_URL}}
        CLIENT_URL: ${{secrets.CLIENT_URL}}
        KEY: ${{secrets.KEY}}
        EMAIL: ${{secrets.EMAIL}} 
        PASSWORD: ${{secrets.PASSWORD}}
        SERVICE_ACCOUNT: ${{secrets.SERVICE_ACCOUNT}}
        SERVICE_ACCOUNT_DEV: ${{secrets.SERVICE_ACCOUNT_DEV}}
    
    - name: Seed Data
      run: |
        touch .env
        echo DATABASE_URL=$DATABASE_URL >> .env
        npx prisma migrate reset -f
      env: 
        DATABASE_URL: ${{secrets.DATABASE_URL}}

    - name: Remove IP address to trusted source postgres
      uses: GarreauArthur/manage-digital-ocean-managed-database-trusted-sources-gh-action@main
      with:
        action: "remove"
        database_id: ${{ secrets.DATABASE_ID }}
        digitalocean_token: ${{ secrets.DO_ACCESS_TOKEN }}


